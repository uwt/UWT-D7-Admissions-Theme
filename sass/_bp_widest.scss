@include widest{
  #header{
    //margin-left:15px;
    padding-top:10px;
  }
  #main{
    padding-top:50px; /* This padding should match the height of the #navigation element */
  }
  #navigation{
    /* Setting heights on the menu elements allows for vertical centering */
    .region,
    li,
    .outerContainer,
    .innerContainer,
    .menu-block-wrapper,
    .block-menu-block,
    .menu{
      height:100%;
    }
    background-color:$purple;
    height: 50px; /* The overall height of the main purple menu */
    .region{
      #block-search-form{
        position: absolute;
        top: 10px; /* This vertically aligns the search form...might be too hard-codey though... */
        right: 10px;
        width: 150px;
        #edit-submit{
          background: url(../images/search-icon-large.png);
          background-repeat: no-repeat;
          background-size: 20px 20px;
          width: 20px;
          height: 20px;
          position:absolute;
          top: 3px;
          right: 5px;
          text-indent:-999px;
          overflow:hidden;
          border:none;
        }
      }
      .menu{
        li{
          vertical-align: middle;
          .outerContainer{
            display: table;
            .innerContainer{ /* We hover on the innerContainer */
              display: table-cell;
              vertical-align: middle;
              a:link,a:visited{
                color: white;
                text-transform: uppercase;
                font-family: encode_sans_normal_bold;
                text-decoration: none;
                margin-left:10px;
                margin-right:10px;
                &:after{
                  content: "";
                  width: 8px;
                  height: 20px;
                  top: 16px;
                  background: url('../images/slash.svg') no-repeat;
                  position: absolute;
                  margin-left:12px;
                }
              }
              &:hover {/* We hover on the .innerContainer */
                > .element{
                  a:link,a:visited{
                    color:$gold;
                  }
                }
                .menu {
                  visibility: visible;
                  opacity: 1;
                }
              }
            }
          }
          /* The flyout menu items */
          .menu{
            border-top:12px solid $purple;
            background-color: $gold_metallic;
            position: absolute;
            opacity:0;
            visibility:hidden;
            -webkit-transition: visibility 0.2s linear, opacity 0.2s linear;
            -moz-transition: visibility 0.2s linear, opacity 0.2s linear;
            -o-transition:  visibility 0.2s linear, opacity 0.2s linear;
            -webkit-border-bottom-right-radius: 3px;
            -webkit-border-bottom-left-radius: 3px;
            -moz-border-radius-bottomright: 3px;
            -moz-border-radius-bottomleft: 3px;
            border-bottom-right-radius: 3px;
            border-bottom-left-radius: 3px;
            li{
              padding:0px;
              .outerContainer{
                .innerContainer{
                  .element{
                    a:link,a:visited{
                      color:white;
                      padding-left:5px;
                    }
                  }
                }
              }
            }
          }
        }
        li.first .outerContainer .innerContainer{
          a:link,a:visited{
            margin-left:0;
          }
        }
        li.last .outerContainer .innerContainer{ /* Don't put a slash on the last item */
          a:link,a:visited{
            //background-color:blue;
            &:after{
              width:0px; /* This hides the slash */
            }
          }
        }
      }
    }
  }

  /*******************************************************************************
  ******************************* DEBUGGING ***********************************
  *******************************************************************************/
  #main{
    //   background-color:#C9A0DC; // Widest = Wisteria
  }

} // breakpoint(widest)